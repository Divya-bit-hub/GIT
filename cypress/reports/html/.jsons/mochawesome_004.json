{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-10-27T14:33:41.653Z",
    "end": "2024-10-27T14:33:52.808Z",
    "duration": 11155,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ffa536c2-4496-4580-9bf0-4174308ac220",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\framework 3 - for mam's reference.js",
      "file": "cypress\\integration\\examples\\framework 3 - for mam's reference.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "70305988-c8ec-40eb-98c1-c929e32492b2",
          "title": "Framework Concepts",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "To handle before hook",
              "fullTitle": "Framework Concepts To handle before hook",
              "timedOut": null,
              "duration": 546,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress\\\\integration\\\\examples\\\\framework 3 - for mam's reference.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"\\\\framework 3 - for mam's reference.js\\\\Framework Concepts -- To handle before hook (failed).png\"\n      ],\n      [\n        \"\\\\framework 3 - for mam's reference.js\\\\Framework Concepts -- To handle before hook (failed) (attempt 2).png\"\n      ],\n      [\n        \"\\\\framework 3 - for mam's reference.js\\\\Framework Concepts -- To handle before hook (failed) (attempt 3).png\"\n      ]\n    ]\n  }\n]",
              "code": "const home = new _homePage.default();\nconst product = new _productPage.default();\ncy.visit(Cypress.env('url') + '/angularpractice/');\nhome.getEditBox().type(this.data.name);\nhome.getGender().select(this.data.gender);\nhome.getPassword().type(this.data.password);\nhome.getEmail().type(this.data.email);\n//Assertion\nhome.getTwowayDataBinding().should('have.value', this.data.name);\n//the above (:nth-child(1) > .form-control) this code is taken from tester by clicking dots circle which is above \nhome.getEditBox().should('have.attr', 'minlength', '2');\nhome.getEntrepreneur().should('be.disabled');\n// Cypress.config('defaultcommandtimeout',8000) // this code is used when we wait the below code to wait for sometime. this is used only for single line line. For all the codes to run a little late we will use the cypress config file.\nhome.getShoptab().click(); //------click shop button\nthis.data.productName.forEach(element => {\n  cy.selectProduct(element); // parameterisation\n});\n// to click on checkout button which is nothing but cart which will have the details of products selected\nproduct.getCheckoutButton().click();\n// next step is to total up the amount of the products which is selected in cart\n//Productsum\nvar sum = 0; //declaration of variable i.e., sum is known as variable\ncy.get('tr td:nth-child(4) strong').each(($e1, index, $list) => {\n  //tr-row ; td-data ; child(4)-4th row under same parent tr\n  const eachamount = $e1.text();\n  var res = eachamount.split(\" \");\n  res = res[1].trim();\n}).then(() => {\n  cy.log(sum);\n});\n//Expected total\ncy.get('h3 strong').then(element => {\n  const amount = element.text();\n  var total = amount.split(\" \");\n  total = total[1].trim();\n  expect(Number(total)).to.equal(sum);\n});\ncy.contains('Checkout').click();\ncy.get('#country').type('India');\ncy.get('.suggestions').click(); //my method mam's method is cy.get('.suggestions > ul >li >a').click()\ncy.get('#checkbox2').check({\n  force: true\n});\ncy.get('[type=\"submit\"]').click();\ncy.get('.alert').then(text => {\n  const actualText = text.text();\n  expect(actualText.includes('Success')).to.be.true;\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'name')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'name')\n    at Context.eval (webpack://automationproject/./cypress/integration/examples/framework 3 - for mam's reference.js:23:38)",
                "diff": null
              },
              "uuid": "9b187103-881f-44d7-81c4-22eb3d2fbbca",
              "parentUUID": "70305988-c8ec-40eb-98c1-c929e32492b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9b187103-881f-44d7-81c4-22eb3d2fbbca"
          ],
          "pending": [],
          "skipped": [],
          "duration": 546,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}