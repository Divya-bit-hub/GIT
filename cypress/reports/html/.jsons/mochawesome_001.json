{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-10-27T14:32:35.363Z",
    "end": "2024-10-27T14:33:02.977Z",
    "duration": 27614,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1a1281d3-4674-4c3d-9305-1b2528827a39",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\calendar.js",
      "file": "cypress\\integration\\examples\\calendar.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ab902b6d-af70-48fc-9744-8cfdf824e221",
          "title": "Greenkart",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "To change the date",
              "fullTitle": "Greenkart To change the date",
              "timedOut": null,
              "duration": 7970,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress\\\\integration\\\\examples\\\\calendar.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"\\\\calendar.js\\\\Greenkart -- To change the date (failed).png\"\n      ],\n      [\n        \"\\\\calendar.js\\\\Greenkart -- To change the date (failed) (attempt 2).png\"\n      ],\n      [\n        \"\\\\calendar.js\\\\Greenkart -- To change the date (failed) (attempt 3).png\"\n      ]\n    ]\n  }\n]",
              "code": "const monthNumber = '6';\nconst date = '15';\nconst year = '2027';\nconst expectedlist = ['monthNumber', 'date', 'year'];\ncy.visit('https://rahulshettyacademy.com/seleniumPractise/#/offers');\ncy.get('.react-date-picker__inputGroup').click(); //---this is used to click on the calendar button\ncy.get('.react-calendar__navigation__label').click(); //--this is used to click on the (month year) option which is above so that we will get all the months in rows and columns\ncy.get('.react-calendar__navigation__label').click(); // we will click on the (year) option so that we will get list of years \ncy.contains('button', year).click();\ncy.get('.react-calendar__year-view__months__month').eq(Number(monthNumber) - 1).click(); //to convert from string to integer\ncy.contains('abbr', date).click();\n//Assertion (As per classmate's idea)\n// cy.get('.react-date-picker__inputGroup input').each(($e1,index,$list)=>{\n//  cy.wrap($e1).invoke('val').then((text)=>{\n//     cy.log(text)\n//     console.log(text)\n//  })\n// })\n//Assertion (As per mam's method)\ncy.get('react-date-picker__inputGroup__input').each(($e1, index) => {\n  // cy.wrap('$e1').invoke('val').then(text)=>{    // line 33 and 34 mam showed is the data updated in webpage\n  // console.log(text)  \n  //})\n  cy.wrap($e1).invoke('val').should('eq', expectedlist[index]); // this line will validate like whether left side is equal to right side\n  //(the above is left side)              (this is right side)\n  // we give cy.wrap and invoke in case when the text (black color) is not available in the code instead it is 3 dots.\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 6000ms: Expected to find element: `react-date-picker__inputGroup__input`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 6000ms: Expected to find element: `react-date-picker__inputGroup__input`, but never found it.\n    at Context.eval (webpack://automationproject/./cypress/integration/examples/calendar.js:31:7)",
                "diff": null
              },
              "uuid": "398346cd-f846-49e9-b9f1-863b4103789d",
              "parentUUID": "ab902b6d-af70-48fc-9744-8cfdf824e221",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "398346cd-f846-49e9-b9f1-863b4103789d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7970,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}